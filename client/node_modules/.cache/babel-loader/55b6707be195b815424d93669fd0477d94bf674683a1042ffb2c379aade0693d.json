{"ast":null,"code":"import { json } from \"react-router-dom\";\n\n//Fetch all pets.\nexport const fetchPets = async () => {\n  const query = window.location.search;\n  const res = await fetch(`/api/v1/pets${query}`);\n  if (!res.ok) {\n    throw json({\n      message: \"No pets available.\"\n    }, {\n      status: 500\n    });\n  }\n  return res;\n};\n\n//Fetch one pet.\nexport const fetchPet = async ({\n  request,\n  params\n}) => {\n  const id = params.id;\n  const res = await fetch(`/api/v1/pets/${id}`);\n  return res;\n};\n\n//Authorize users.\nexport const registerUser = async user => {\n  const res = await fetch(\"/users/register\", {\n    method: \"POST\",\n    headers: {\n      \"Content-type\": \"application/json\"\n    },\n    body: JSON.stringify(user)\n  });\n  if (res.status !== 200) {\n    const data = await res.json();\n    return Promise.reject(data.message);\n  } else {\n    const data = await res.json();\n    return data;\n  }\n};\nexport const loginUser = async user => {\n  const res = await fetch(\"/users/login\", {\n    method: \"POST\",\n    headers: {\n      \"Content-type\": \"application/json\"\n    },\n    body: JSON.stringify(user)\n  });\n  if (res.status !== 200) {\n    const data = await res.json();\n    return Promise.reject(data.message);\n  } else {\n    const data = await res.json();\n    return data;\n  }\n};\nexport const getUser = async () => {\n  const res = await fetch(\"/users/isUserAuth\", {\n    credentials: \"include\",\n    headers: {\n      \"Content-type\": \"application/json\"\n    }\n  });\n  if (res.status !== 200) {\n    const data = await res.json();\n    return Promise.reject(data.message);\n  }\n  const data = await res.json();\n  return data;\n};\nexport const logoutUser = async () => {\n  const res = await fetch(\"/users/logout\", {\n    credentials: \"include\",\n    headers: {\n      \"Content-type\": \"application/json\"\n    }\n  });\n  const data = await res.json();\n  return data;\n};","map":{"version":3,"names":["json","fetchPets","query","window","location","search","res","fetch","ok","message","status","fetchPet","request","params","id","registerUser","user","method","headers","body","JSON","stringify","data","Promise","reject","loginUser","getUser","credentials","logoutUser"],"sources":["C:/Users/siddn/Github/MERN-Full-Stack-Pet-Adoption-App-main/backend/client/src/services/api.tsx"],"sourcesContent":["import { json } from \"react-router-dom\";\n\n//Fetch all pets.\nexport const fetchPets = async () => {\n  const query = window.location.search;\n  const res = await fetch(`/api/v1/pets${query}`);\n  if (!res.ok) {\n    throw json({ message: \"No pets available.\" }, { status: 500 });\n  }\n  return res;\n};\n\n//Fetch one pet.\nexport const fetchPet = async ({\n  request,\n  params,\n}: {\n  request: any;\n  params: any;\n}) => {\n  const id = params.id;\n  const res = await fetch(`/api/v1/pets/${id}`);\n  return res;\n};\n\n//Authorize users.\nexport const registerUser = async (user: RegisterUser) => {\n  const res = await fetch(\"/users/register\", {\n    method: \"POST\",\n    headers: { \"Content-type\": \"application/json\" },\n    body: JSON.stringify(user),\n  });\n  if (res.status !== 200) {\n    const data = await res.json();\n    return Promise.reject(data.message);\n  } else {\n    const data = await res.json();\n    return data;\n  }\n};\n\nexport const loginUser = async (user: LoginUser) => {\n  const res = await fetch(\"/users/login\", {\n    method: \"POST\",\n    headers: { \"Content-type\": \"application/json\" },\n    body: JSON.stringify(user),\n  });\n  if (res.status !== 200) {\n    const data = await res.json();\n    return Promise.reject(data.message);\n  } else {\n    const data = await res.json();\n    return data;\n  }\n};\n\nexport const getUser = async () => {\n  const res = await fetch(\"/users/isUserAuth\", {\n    credentials: \"include\",\n    headers: { \"Content-type\": \"application/json\" },\n  });\n  if (res.status !== 200) {\n    const data = await res.json();\n    return Promise.reject(data.message);\n  }\n  const data = await res.json();\n  return data;\n};\n\nexport const logoutUser = async () => {\n  const res = await fetch(\"/users/logout\", {\n    credentials: \"include\",\n    headers: { \"Content-type\": \"application/json\" },\n  });\n  const data = await res.json();\n  return data;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}